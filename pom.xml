<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.apache.mahout</groupId>
    <artifactId>mahoutTestApps</artifactId>
    <version>0.0.1-SNAPSHOT</version>



    <packaging>pom</packaging>
    <name>Apache Mahout</name>
    <url>http://mahout.apache.org</url>
    <inceptionYear>2008</inceptionYear>
    <description>
        Example applications to test Mahout with. As well, we can use ths repositpory to work on new directions
        and applied Domaind; End to End applications; etc. e.g, Complex numbers, signal processing, etc.
    </description>
    <organization>
        <name>The Apache Software Foundation</name>
        <url>http://www.apache.org/</url>
    </organization>

    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <properties>
        <apache-rat.plugin.version>0.13</apache-rat.plugin.version>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <mjavadoc.version>2.10.3</mjavadoc.version>
        <slf4j.version>1.7.22</slf4j.version>
        <scala.version>2.12.8</scala.version>
        <scala.compat.version>2.12</scala.compat.version>
        <source.plugin.version>3.0.1</source.plugin.version>
        <spark.version>2.4.3</spark.version>
        <spark.compat.version>2.4</spark.compat.version>
        <hadoop.version>2.4.1</hadoop.version>
        <depgraph.plugin.version>3.3.0</depgraph.plugin.version>
        <scalatest.maven.plugin.version>2.0.0</scalatest.maven.plugin.version>
    </properties>


    <repositories>
        <repository>
            <id>apache.snapshots</id>
            <name>Apache Snapshot Repository</name>
            <url>https://repository.apache.org/snapshots</url>
            <releases>
                <enabled>false</enabled>
            </releases>
        </repository>
        <repository>
            <id>apache.releases.https</id>
            <name>Apache Staging Repository</name>
            <url>https://repository.apache.org/service/local/staging/deploy/maven2/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
        </repository>
    </repositories>

    <!-- Required for Release Plugin -->
    <scm>
        <connection>scm:git:git@github.com:andrewpalumbo/mahoutTestApps.git</connection>
        <tag>mahoutTestApps-0.0.1
        </tag>
    </scm>

    <modules>
        <module>sparseMatMatMul</module>
    </modules>

    <dependencyManagement>
         <dependencies>
             <dependency>
                 <groupId>org.apache.mahout</groupId>
                 <artifactId>mahout-core_2.12</artifactId>
                 <version>14.1</version>
             </dependency>
             <dependency>
                 <groupId>org.apache.mahout</groupId>
                 <artifactId>mahout-hdfs_2.12</artifactId>
                 <version>14.1</version>
             </dependency>

             <dependency>
                 <groupId>org.apache.mahout</groupId>
                 <artifactId>mahout-spark_2.12</artifactId>
                 <version>14.1</version>
             </dependency>
             <dependency>
                 <groupId>org.apache.mahout</groupId>
                 <artifactId>mahout-spark-cli-drivers_2.12</artifactId>
                 <version>14.1</version>
             </dependency>


             <!-- scala stuff -->
             <!-- set the scala version here only -->
             <dependency>
                 <groupId>org.scalatest</groupId>
                 <artifactId>scalatest_${scala.compat.version}</artifactId>
                 <version>3.0.5</version>
             </dependency>

             <dependency>
                 <groupId>org.scala-lang</groupId>
                 <artifactId>scala-reflect</artifactId>
                 <version>${scala.version}</version>
             </dependency>

             <dependency>
                 <groupId>org.scala-lang</groupId>
                 <artifactId>scala-library</artifactId>
                 <version>${scala.version}</version>
             </dependency>

             <dependency>
                 <groupId>log4j</groupId>
                 <artifactId>log4j</artifactId>
                 <version>1.2.17</version>
             </dependency>
         </dependencies>
    </dependencyManagement>

    <build>
      <pluginManagement>
        <plugins>        <!-- generate java doc -->
        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <version>${mjavadoc.version}</version>
            <executions>
                <execution>
                    <id>attach-javadocs</id>
                    <phase>package</phase>
                    <goals>
                        <goal>jar</goal>
                    </goals>
                </execution>
            </executions>
        </plugin>

          <!-- Create Scala Docs -->
      <plugin>
        <groupId>net.alchim31.maven</groupId>
        <artifactId>scala-maven-plugin</artifactId>
        <version>3.4.4</version>
          <executions>
            <execution>
              <id>attach-javadocs</id>
              <phase>package</phase>
              <goals>
                  <goal>doc-jar</goal>
              </goals>
             </execution>
           </executions>
         </plugin>
         <plugin>
             <groupId>org.apache.rat</groupId>
             <artifactId>apache-rat-plugin</artifactId>
             <version>${apache-rat.plugin.version}</version>
             <executions>
                <execution>
                    <phase>validate</phase>
                    <goals>
                        <goal>check</goal>
                    </goals>
                </execution>
             </executions>
             <configuration>
                <excludes>
                    <exclude>**/*.conf</exclude>
                    <exclude>**/*.iml</exclude>
                    <exclude>**/*.md</exclude>
                    <exclude>**/*.props</exclude>
                    <exclude>**/gen/**</exclude>
                    <exclude>**/resources/**</exclude>
                    <exclude>**/images/**</exclude>
                    <exclude>**/target/**</exclude>
                    <exclude>**/testdata/**</exclude>
                    <exclude>**/.idea/**</exclude>
                    <exclude>**/package-info.java</exclude>
                    <exclude>**/.git/**</exclude>
                    <exclude>**/.classpath</exclude>
                    <exclude>**/.project</exclude>
                    <exclude>**/.settings/**</exclude>
                    <exclude>**/*.patch</exclude>
                    <exclude>website/**</exclude>
                    <exclude>.github/*</exclude>
                    <exclude>**/*.properties</exclude>
                </excludes>
                <excludeSubProjects>false</excludeSubProjects>
              </configuration>
         </plugin>

            <!-- delete jars on clean in top directory, which is lib/ -->
         <plugin>
             <artifactId>maven-clean-plugin</artifactId>
            <version>3.0.0</version>
            <configuration>
              <filesets>
                <fileset>
                    <directory>lib/</directory>
                    <includes>
                        <include>*.jar</include>
                    </includes>
                    <followSymlinks>false</followSymlinks>
                </fileset>
                <fileset>
                    <directory>doc/</directory>
                    <includes>
                        <include>*.jar</include>
                    </includes>
                    <followSymlinks>false</followSymlinks>
                </fileset>
              </filesets>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-enforcer-plugin</artifactId>
            <version>1.4</version>
            <executions>
                <execution>
                    <id>enforce-versions</id>
                    <goals>
                        <goal>enforce</goal>
                    </goals>
                    <configuration>
                        <rules>
                            <requireJavaVersion>
                                <version>[1.8]</version>
                            </requireJavaVersion>
                            <requireMavenVersion>
                                <version>[3.3.3,)</version>
                            </requireMavenVersion>
                        </rules>
                    </configuration>
                  </execution>
              </executions>
            </plugin>
          <plugin>

              <groupId>com.github.ferstl</groupId>
              <artifactId>depgraph-maven-plugin</artifactId>
              <version>${depgraph.plugin.version}</version>
          </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>
